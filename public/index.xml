<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Shoppon&#39;s site</title>
    <link>http://0.0.0.0:1313/</link>
    <description>Recent content on Shoppon&#39;s site</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Wed, 21 Oct 2020 09:06:30 +0000</lastBuildDate>
    
	<atom:link href="http://0.0.0.0:1313/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>base.md</title>
      <link>http://0.0.0.0:1313/post/c&#43;&#43;/base/</link>
      <pubDate>Wed, 21 Oct 2020 09:06:30 +0000</pubDate>
      
      <guid>http://0.0.0.0:1313/post/c&#43;&#43;/base/</guid>
      <description>C/C++基础 List &amp;amp; Vector Vector: 内存连续 预分配内存 每个元素仅需要其自身大小的空间（针额外指针空间） 当新添加元素时可自动重新分配内存 在尾部插入常数时间，</description>
    </item>
    
    <item>
      <title></title>
      <link>http://0.0.0.0:1313/post/arch/design/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://0.0.0.0:1313/post/arch/design/</guid>
      <description>可信设计 软件建模 原则 模型是抽象的，需要通过不同视角来表示： 外部视角 交互视角 结构化视角 行为视角 方法 工具：UML UML组成：事物（点）、关系（线</description>
    </item>
    
    <item>
      <title></title>
      <link>http://0.0.0.0:1313/post/arch/refactor/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://0.0.0.0:1313/post/arch/refactor/</guid>
      <description>重构 概念与原则 定义 在不改变代码外在行为的前提下， 对代码做出修改， 以改进程序的内部结构。 何时重构 三次法则：事不过三，三则重构 新增功能：让未来增</description>
    </item>
    
    <item>
      <title></title>
      <link>http://0.0.0.0:1313/post/arch/security/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://0.0.0.0:1313/post/arch/security/</guid>
      <description>安全设计 安全架构设计与方法 架构是以组件与组件之间的关系、组件与环境之间的关系为内容的某一系统的基本组织结构，以及指导上述内容设计与演化的原理</description>
    </item>
    
    <item>
      <title></title>
      <link>http://0.0.0.0:1313/post/c&#43;&#43;/debug/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://0.0.0.0:1313/post/c&#43;&#43;/debug/</guid>
      <description>调试 gdb使用 常用操作 **attach指定进程：**gdb -p ${pid} **挂起所有进程：**thread apply all backtrace **堆栈前进/后退：**up/down</description>
    </item>
    
    <item>
      <title></title>
      <link>http://0.0.0.0:1313/post/c&#43;&#43;/naming/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://0.0.0.0:1313/post/c&#43;&#43;/naming/</guid>
      <description>命名 命名方法 返回真伪值的方法 位置 单词 意义 例 Prefix is 对象是否符合期待的状态 isValid Prefix can 对象能否执行所期待的动作 canRemove Prefix should 调用方执行某个命令或方法是好还是不好</description>
    </item>
    
    <item>
      <title></title>
      <link>http://0.0.0.0:1313/post/c&#43;&#43;/static/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://0.0.0.0:1313/post/c&#43;&#43;/static/</guid>
      <description>Static关键字 用法 C/C++中static关键字共有五种用法： 一. 类静态成员变量 为所有类的实例共有。 存储于全局数据区，定义时分配存储空间</description>
    </item>
    
    <item>
      <title></title>
      <link>http://0.0.0.0:1313/post/cbs/db_connections/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://0.0.0.0:1313/post/cbs/db_connections/</guid>
      <description>数据库连接数问题 问题现象 6000虚拟机并发备份时，大量备份处于waiting_protect状态。 日志中大量打印async_connecti</description>
    </item>
    
    <item>
      <title></title>
      <link>http://0.0.0.0:1313/post/cbs/unify/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://0.0.0.0:1313/post/cbs/unify/</guid>
      <description>背景 云上云下的卷备份、虚拟机备份总共有3套构架：配套FusionCloud 2.0的DPS卷备份、配套FusionCloud 2.05的Karb</description>
    </item>
    
    <item>
      <title></title>
      <link>http://0.0.0.0:1313/post/cloud/router/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://0.0.0.0:1313/post/cloud/router/</guid>
      <description>软路由 设置访问光猫 进入网络&amp;ndash;&amp;gt;静态路由页面，添加接口类型&amp;quot;lan&amp;rdquo;，主机IP为光猫IP192.168</description>
    </item>
    
    <item>
      <title></title>
      <link>http://0.0.0.0:1313/post/cloud/t630/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://0.0.0.0:1313/post/cloud/t630/</guid>
      <description>服务器管理 硬件 GPU直通 修改nova.conf配置文件，支持直通： 1 2 3 [pci] alias = { &amp;#34;vendor_id&amp;#34;:&amp;#34;10de&amp;#34;, &amp;#34;product_id&amp;#34;:&amp;#34;17fd&amp;#34;, &amp;#34;device_type&amp;#34;:&amp;#34;type-PCI&amp;#34;, &amp;#34;name&amp;#34;:&amp;#34;nvidia&amp;#34;} passthrough_whitelist = {&amp;#34;address&amp;#34;: &amp;#34;0000:02:00.0&amp;#34;} 设置flavor：openstack flavor set m1.xlarge --property</description>
    </item>
    
    <item>
      <title></title>
      <link>http://0.0.0.0:1313/post/cloud/windows10/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://0.0.0.0:1313/post/cloud/windows10/</guid>
      <description>使用windows 10 KVM镜像制作 创建空的镜像文件 ：qemu-img create -f qcow2 /home/shoppon/images/windows-10.qcow2 160G 使用ISO创建镜像：virt-install --connect qemu:///system --name windows-10 --ram 8192 --vcpus 8 --network</description>
    </item>
    
    <item>
      <title></title>
      <link>http://0.0.0.0:1313/post/design/control_data/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://0.0.0.0:1313/post/design/control_data/</guid>
      <description>管控面与数据面的差异与思考 定义 管控面对最终用户提供服务，包括console、API、sdk等，还需要对整个流程进行编排，包括创建数据中心、创</description>
    </item>
    
    <item>
      <title></title>
      <link>http://0.0.0.0:1313/post/design/design/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://0.0.0.0:1313/post/design/design/</guid>
      <description>可信设计 软件建模 原则 模型是抽象的，需要通过不同视角来表示： 外部视角 交互视角 结构化视角 行为视角 方法 工具：UML UML组成：事物（点）、关系（线</description>
    </item>
    
    <item>
      <title></title>
      <link>http://0.0.0.0:1313/post/design/io/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://0.0.0.0:1313/post/design/io/</guid>
      <description>IO模型 概念 同步/异步 **同步：**一个任务的完成需要依赖另外一个任务，只有被依赖的任务完成时才完成。同步是可靠的任务序列。 **异步：**不</description>
    </item>
    
    <item>
      <title></title>
      <link>http://0.0.0.0:1313/post/design/refactor/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://0.0.0.0:1313/post/design/refactor/</guid>
      <description>重构 概念与原则 定义 在不改变代码外在行为的前提下， 对代码做出修改， 以改进程序的内部结构。 何时重构 三次法则：事不过三，三则重构 新增功能：让未来增</description>
    </item>
    
    <item>
      <title></title>
      <link>http://0.0.0.0:1313/post/design/security/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://0.0.0.0:1313/post/design/security/</guid>
      <description>安全设计 安全架构设计与方法 架构是以组件与组件之间的关系、组件与环境之间的关系为内容的某一系统的基本组织结构，以及指导上述内容设计与演化的原理</description>
    </item>
    
    <item>
      <title></title>
      <link>http://0.0.0.0:1313/post/design/sfmea/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://0.0.0.0:1313/post/design/sfmea/</guid>
      <description>故障模式分析 定义 FMEA：失效（故障）模式影响分析（Failure Mode and Effects Analysis） 对各个工序（步骤）逐一分析，找出潜在的失效模式，并</description>
    </item>
    
    <item>
      <title></title>
      <link>http://0.0.0.0:1313/post/design/software_engineering/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://0.0.0.0:1313/post/design/software_engineering/</guid>
      <description>软件工程 通用数据结构和算法 分类 **数据结构：**数组、字符串、链表、队列、栈、二叉树、平衡树、前缀树 **高级数据结构：**B+树、LSM树、</description>
    </item>
    
    <item>
      <title></title>
      <link>http://0.0.0.0:1313/post/devops/ansible/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://0.0.0.0:1313/post/devops/ansible/</guid>
      <description>Ansible常用操作 原理 ansible是一款业界出名的运维工具，可将linux相关操作封装成playbook，将主机信息通过invento</description>
    </item>
    
    <item>
      <title></title>
      <link>http://0.0.0.0:1313/post/devops/docker/docker-compose/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://0.0.0.0:1313/post/devops/docker/docker-compose/</guid>
      <description>Docker Compose </description>
    </item>
    
    <item>
      <title></title>
      <link>http://0.0.0.0:1313/post/devops/docker/docker_env/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://0.0.0.0:1313/post/devops/docker/docker_env/</guid>
      <description>使用docker构建开发环境 Docker的优势 软件开发必然要用到类似gcc、gdb、cmake等各种工作，为了避免对电脑运行环境的污染，最好</description>
    </item>
    
    <item>
      <title></title>
      <link>http://0.0.0.0:1313/post/devops/docker/image/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://0.0.0.0:1313/post/devops/docker/image/</guid>
      <description>镜像管理 Dockerfile 参考文档 配置Harbor以支持https</description>
    </item>
    
    <item>
      <title></title>
      <link>http://0.0.0.0:1313/post/devops/docker/network/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://0.0.0.0:1313/post/devops/docker/network/</guid>
      <description>容器网络 **查询网络列表：**docker network ls **模拟断网：**docker network disconnect [OPTIONS] NETWORK CONTAINER **模拟连网：**docker network connect [OPTIONS] NETWORK CONTAINER 实战 断开sdr</description>
    </item>
    
    <item>
      <title></title>
      <link>http://0.0.0.0:1313/post/devops/home_env/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://0.0.0.0:1313/post/devops/home_env/</guid>
      <description>家庭环境 k8s已经是事实标准 规划 硬件 普通的家用电脑CPU核心数、硬盘一般比较小，无法满足部署大规模服务的要求。因此开始规划时就将目标瞄准在服</description>
    </item>
    
    <item>
      <title></title>
      <link>http://0.0.0.0:1313/post/devops/jenkins/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://0.0.0.0:1313/post/devops/jenkins/</guid>
      <description>Jenkins安装、配置 安装 执行 yum install java-1.8.0-openjdk安装jdk8。 执行wget http://pkg.jenkins.io</description>
    </item>
    
    <item>
      <title></title>
      <link>http://0.0.0.0:1313/post/devops/jenkins_gitbook/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://0.0.0.0:1313/post/devops/jenkins_gitbook/</guid>
      <description>Gitlab集成jenkins自动编译gitbook 安装nodejs 执行echo &amp;quot;registry = http://mirror/npm&amp;quot; &amp;gt;&amp;gt; ~/.npmrc ，设置npm源为内源。 安装gitbook 执行npm</description>
    </item>
    
    <item>
      <title></title>
      <link>http://0.0.0.0:1313/post/devops/tools/clang-format/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://0.0.0.0:1313/post/devops/tools/clang-format/</guid>
      <description>Clang-format使用 安装 clang-format是LLVM编译器自带的功能，使用clang-format需安装LLVM。 配置 clan</description>
    </item>
    
    <item>
      <title></title>
      <link>http://0.0.0.0:1313/post/devops/tools/git/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://0.0.0.0:1313/post/devops/tools/git/</guid>
      <description>Git reset&amp;amp;checkout&amp;amp;revert 命令 作用域 常用情景 git reset 提交层面 在私有分支上舍弃一些没有提交的更改 git reset 文件层面 将文件从缓存区中移除 git checkout 提交层面 切换分支或查看旧版本 git checkout 文件</description>
    </item>
    
    <item>
      <title></title>
      <link>http://0.0.0.0:1313/post/devops/tools/latex/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://0.0.0.0:1313/post/devops/tools/latex/</guid>
      <description>LaTex 中文支持 在开头加上%!TEX program = xelatex并使用ctex包\usepackage[UTF8]{ctex}。 package安装 Mac下安</description>
    </item>
    
    <item>
      <title></title>
      <link>http://0.0.0.0:1313/post/devops/tools/vim/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://0.0.0.0:1313/post/devops/tools/vim/</guid>
      <description>vim相关 插件 快捷键 技巧 跳到指定行:linenum 复制多行:start, end copy dest 保存退出ZZ 重复操作. 大量删除:start, end delete/d/del 格式化:G 配置</description>
    </item>
    
    <item>
      <title></title>
      <link>http://0.0.0.0:1313/post/devops/vscode/config/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://0.0.0.0:1313/post/devops/vscode/config/</guid>
      <description>vscode配置 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62</description>
    </item>
    
    <item>
      <title></title>
      <link>http://0.0.0.0:1313/post/devops/vscode/keymap/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://0.0.0.0:1313/post/devops/vscode/keymap/</guid>
      <description>快捷键大全 全局 Command + Shift + P / F1 显示命令面板 Command + P 快速打开 Command + Shift + N 打开新窗口 Command + W 关闭窗口 基本 Command + X 剪切（未选中文本的情况下，剪切光标所在行）</description>
    </item>
    
    <item>
      <title></title>
      <link>http://0.0.0.0:1313/post/devops/vscode/remote/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://0.0.0.0:1313/post/devops/vscode/remote/</guid>
      <description>vscode remote使用方法 前言 按：vscode是宇宙第一编辑器，不接受任何反驳。 vscode是微软公司推出的一款开源轻量级编辑器，支持各种主流语</description>
    </item>
    
    <item>
      <title></title>
      <link>http://0.0.0.0:1313/post/hdrs/analyze/core_features/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://0.0.0.0:1313/post/hdrs/analyze/core_features/</guid>
      <description>灾备核心技术 如果以两个字分别来描述备份和容灾的核心技术，那备份就是副本，容灾就是复制。 备份 备份副本管理 备份最核心的特性莫过于副本管理。从经济</description>
    </item>
    
    <item>
      <title></title>
      <link>http://0.0.0.0:1313/post/hdrs/analyze/manufacturer/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://0.0.0.0:1313/post/hdrs/analyze/manufacturer/</guid>
      <description>灾备厂商 信息 厂商 成立时间 总部 员工数 代表产品 技术栈 爱数 2006 上海 1300 AnyBackup AnyDATA 存储层 应用层 英方 2011 上海 i2CloudCDP i2BakShare i2CloudDR 主机层 鼎甲 2009 广州 200 DBackup、Infokis</description>
    </item>
    
    <item>
      <title></title>
      <link>http://0.0.0.0:1313/post/hdrs/analyze/tech_route/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://0.0.0.0:1313/post/hdrs/analyze/tech_route/</guid>
      <description>灾备的四种技术路线 众所周知，灾备共有4种技术路线： 存储层：通过存储系统内建的固件或操作系统、IP网络或光纤通道等传输介质连结，将数据以同步或</description>
    </item>
    
    <item>
      <title></title>
      <link>http://0.0.0.0:1313/post/hdrs/architecture/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://0.0.0.0:1313/post/hdrs/architecture/</guid>
      <description>​</description>
    </item>
    
    <item>
      <title></title>
      <link>http://0.0.0.0:1313/post/hdrs/asr-test/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://0.0.0.0:1313/post/hdrs/asr-test/</guid>
      <description>特性分析 重新同步 测试用例 盘恢复后是否重同步 测试步骤 在主机上写入文件/home/x0025023/mock.dat a. dd if=/dev/urandom of=/home/x00250203/mock.dat bs=1024 count=4 b. stat /home/x00250203/mock.dat&amp;mdash;15865596 c. debugfs -R &amp;ldquo;stat &amp;lt;19&amp;gt;&amp;rdquo;</description>
    </item>
    
    <item>
      <title></title>
      <link>http://0.0.0.0:1313/post/hdrs/design/v2c/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://0.0.0.0:1313/post/hdrs/design/v2c/</guid>
      <description>V2C 背景 虚拟机启动顺序依次为BIOS-&amp;gt;MBR-&amp;gt;GRUB-&amp;gt;Kernal-&amp;gt;Init-&amp;gt;Runlevel共6个</description>
    </item>
    
    <item>
      <title></title>
      <link>http://0.0.0.0:1313/post/linux/binary/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://0.0.0.0:1313/post/linux/binary/</guid>
      <description>二进制分析 readelf elf全称为executable and linking format。 **查看so信息：**readelf -d liboma.so objdump ldd **查看可执行文件/动态库的依赖：</description>
    </item>
    
    <item>
      <title></title>
      <link>http://0.0.0.0:1313/post/linux/cgroup/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://0.0.0.0:1313/post/linux/cgroup/</guid>
      <description>cgroup资源限制 简介 cgroup（control group）是linux系统内核提供的一种资源限制机制。docker便是使用cgroup</description>
    </item>
    
    <item>
      <title></title>
      <link>http://0.0.0.0:1313/post/linux/disk/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://0.0.0.0:1313/post/linux/disk/</guid>
      <description>磁盘相关 概念 磁盘 SCSI、SATA、U盘、Flash类型的磁盘：/dev/sdx，最多11（5到15）？ IDE类型的磁盘：/dev/hdx，</description>
    </item>
    
    <item>
      <title></title>
      <link>http://0.0.0.0:1313/post/linux/log/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://0.0.0.0:1313/post/linux/log/</guid>
      <description>日志相关 syslog 相关概念 programname：打印日志的程序名，目前Karbor用到了karbor-api、karbor-apiControl等</description>
    </item>
    
    <item>
      <title></title>
      <link>http://0.0.0.0:1313/post/linux/network/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://0.0.0.0:1313/post/linux/network/</guid>
      <description>网络相关 交换机 三层网络模型 **接入层：**为终端客户提供接入功能。 **汇聚层：**连接网络的核心层和各个接入的应用层，采用三层交换机。二层网</description>
    </item>
    
    <item>
      <title></title>
      <link>http://0.0.0.0:1313/post/linux/security/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://0.0.0.0:1313/post/linux/security/</guid>
      <description>安全相关 证书 证书内容 证书即是用来证明自己的文件，其中包含了证书签发者信息Issuer，过期时间Validity，公钥信息Public Key Alg</description>
    </item>
    
    <item>
      <title></title>
      <link>http://0.0.0.0:1313/post/linux/shell/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://0.0.0.0:1313/post/linux/shell/</guid>
      <description>&lt;h1 id=&#34;shell编程&#34;&gt;Shell编程&lt;/h1&gt;
&lt;h2 id=&#34;基础&#34;&gt;基础&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;在文件开头声明使用的解释器：&lt;code&gt;#!/bin/bash&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;设置不允许出错：&lt;code&gt;set -e&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;设置打印输出：&lt;code&gt;set -x&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;参数&#34;&gt;参数&lt;/h2&gt;
&lt;p&gt;通过&lt;code&gt;getopts&lt;/code&gt;获取参数&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span class=&#34;k&#34;&gt;while&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;getopts&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;:u&amp;#39;&lt;/span&gt; OPT&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;do&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;case&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$OPT&lt;/span&gt; in
    u&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;
        &lt;span class=&#34;nb&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;Upgrade.&amp;#34;&lt;/span&gt;
        &lt;span class=&#34;p&#34;&gt;;;&lt;/span&gt;
    ?&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;
        &lt;span class=&#34;nb&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;Usage: -u upgrade&amp;#34;&lt;/span&gt;
        &lt;span class=&#34;nb&#34;&gt;exit&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;1&lt;/span&gt;
        &lt;span class=&#34;p&#34;&gt;;;&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;esac&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;done&lt;/span&gt;
&lt;span class=&#34;nb&#34;&gt;shift&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;$((&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$OPTIND&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;-&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;))&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h2 id=&#34;数据结构&#34;&gt;数据结构&lt;/h2&gt;
&lt;h3 id=&#34;map&#34;&gt;map&lt;/h3&gt;
&lt;p&gt;使用&lt;code&gt;declare&lt;/code&gt;声明&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span class=&#34;nb&#34;&gt;declare&lt;/span&gt; -A &lt;span class=&#34;nv&#34;&gt;UUID_MAP&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=([&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;ra&amp;#34;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;]=&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;100&amp;#34;&lt;/span&gt;
    &lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;soma&amp;#34;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;]=&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;200&amp;#34;&lt;/span&gt;
    &lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;toma&amp;#34;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;]=&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;300&amp;#34;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h3 id=&#34;str&#34;&gt;str&lt;/h3&gt;
&lt;p&gt;**判断字符串是否为空(zero)：**&lt;code&gt;[[ -z &amp;quot;&amp;quot; ]] &amp;amp;&amp;amp; echo &amp;quot;yes&amp;quot; # yes&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;**判断字符串是否非空：**&lt;code&gt;[[ -n &amp;quot;foo&amp;quot; ]] &amp;amp;&amp;amp; echo &amp;quot;yes&amp;quot; # yes&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;**判断字符串是否相等：**&lt;code&gt;[[ &amp;quot;foo&amp;quot; == &amp;quot;bar&amp;quot; ]] || echo &amp;quot;no&amp;quot; # no&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;**判断字符串是否相等：**&lt;code&gt;[[ &amp;quot;foo&amp;quot; = &amp;quot;bar&amp;quot; ]] || echo &amp;quot;no&amp;quot; # no&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;**判断字符串是否不相等：**&lt;code&gt;[[ &amp;quot;foo&amp;quot; != &amp;quot;bar&amp;quot; ]] &amp;amp;&amp;amp; echo &amp;quot;yes&amp;quot; # yes&lt;/code&gt;&lt;/p&gt;
&lt;h2 id=&#34;控制&#34;&gt;控制&lt;/h2&gt;
&lt;h3 id=&#34;for循环&#34;&gt;for循环&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; d in ra soma toma&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;do&lt;/span&gt;
    start_docker &lt;span class=&#34;si&#34;&gt;${&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;d&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;}&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;done&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h3 id=&#34;if&#34;&gt;if&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;[&lt;/span&gt; -d &lt;span class=&#34;si&#34;&gt;${&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;OMA_PATH&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;}&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;then&lt;/span&gt;
    ls &lt;span class=&#34;si&#34;&gt;${&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;OMA_PATH&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;}&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;|&lt;/span&gt; grep -v logs &lt;span class=&#34;p&#34;&gt;|&lt;/span&gt; xargs -I&lt;span class=&#34;o&#34;&gt;{}&lt;/span&gt; rm -rf &lt;span class=&#34;si&#34;&gt;${&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;OMA_PATH&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;}&lt;/span&gt;/&lt;span class=&#34;o&#34;&gt;{}&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;fi&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h3 id=&#34;in操作&#34;&gt;in操作&lt;/h3&gt;
&lt;p&gt;shell本身不支持&lt;code&gt;in&lt;/code&gt;操作，可通过正则来实现：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;[[&lt;/span&gt; ! &lt;span class=&#34;nv&#34;&gt;$1&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;~ ^&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;public_cloud&lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;private_cloud&lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;host&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;$ &lt;span class=&#34;o&#34;&gt;]]&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;then&lt;/span&gt;
    &lt;span class=&#34;nb&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;wrong deploy mode, only support public_cloud/private_cloud/host&amp;#34;&lt;/span&gt;
    &lt;span class=&#34;nb&#34;&gt;exit&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;1&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;fi&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h2 id=&#34;常用&#34;&gt;常用&lt;/h2&gt;
&lt;h3 id=&#34;其他&#34;&gt;其他&lt;/h3&gt;
&lt;p&gt;**生成随机数：**&lt;code&gt;head /dev/urandom | tr -dc A-Za-z0-9 | head -c 5 ; echo &#39;&#39;&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;**字符串替换：**&lt;code&gt;test=a,b,c;${test//,/_}&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;**统计代码行：**&lt;code&gt;find src script  -name &#39;*.h&#39; -o -name &#39;*.cpp&#39; -o -name &#39;*.sh&#39; | xargs wc -l | sort -nr | head -n 10&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;**生成ssh密钥：**&lt;code&gt;ssh-keygen -t rsa -b 4096 -C &amp;quot;shopppon@gmail.com&amp;quot;&lt;/code&gt;&lt;/p&gt;
&lt;h3 id=&#34;获取脚本路径&#34;&gt;获取脚本路径&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span class=&#34;nv&#34;&gt;SCRIPT&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;$(&lt;/span&gt;readlink -f &lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$0&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;nv&#34;&gt;SCRIPTPATH&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;$(&lt;/span&gt;dirname &lt;span class=&#34;si&#34;&gt;${&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;SCRIPT&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h3 id=&#34;时间&#34;&gt;时间&lt;/h3&gt;
&lt;h4 id=&#34;时间格式化&#34;&gt;时间格式化&lt;/h4&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;6
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;</description>
    </item>
    
    <item>
      <title></title>
      <link>http://0.0.0.0:1313/post/linux/sysbench/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://0.0.0.0:1313/post/linux/sysbench/</guid>
      <description>基准测试 编译 sysben工具地址为akopytov/sysbench)，按照官方指导编译即可。 使用 CPU测试 **CPU基准测试：**./sy</description>
    </item>
    
    <item>
      <title></title>
      <link>http://0.0.0.0:1313/post/linux/system/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://0.0.0.0:1313/post/linux/system/</guid>
      <description>1 service sysstat restart 系统管理 系统性能统计sar sar是system activity reporter的缩写。 每隔2秒刷新网络流程：sar -n DEV 2 每隔2秒查看CPU使用情况</description>
    </item>
    
    <item>
      <title></title>
      <link>http://0.0.0.0:1313/post/memory/p4/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://0.0.0.0:1313/post/memory/p4/</guid>
      <description>P4之迷 0号病人一天不公布，病毒来源一天不确定，阴谋论就一天不会终止。也许科学家们正在紧锣密鼓的调查，但在政府公信力急剧下降的之后，即使后面</description>
    </item>
    
    <item>
      <title></title>
      <link>http://0.0.0.0:1313/post/memory/xlgff/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://0.0.0.0:1313/post/memory/xlgff/</guid>
      <description>项立刚与方方之争 人物背景 项立刚，安徽芜湖人，毕业于中国人民大学，文学硕士。中国通信业知名观察家。项立刚是我国第五媒体最早理论联系实践的研究者</description>
    </item>
    
    <item>
      <title></title>
      <link>http://0.0.0.0:1313/post/python/advanced_ds/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://0.0.0.0:1313/post/python/advanced_ds/</guid>
      <description>高级数据结构 defaultdict 含默认值的字典 1 2 3 4 5 from collections import defaultdict dd = defaultdict(list) print(dd.get(&amp;#39;foo&amp;#39;)) # None print(dd[&amp;#39;foo]) # [] Counter 统计一个iterable数据结构中元素出现的次数。 1 2 3 4 from collections import Counter c0 = Counter([&amp;#39;foo&amp;#39;, &amp;#39;bar&amp;#39;])</description>
    </item>
    
    <item>
      <title></title>
      <link>http://0.0.0.0:1313/post/python/advanced_topics/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://0.0.0.0:1313/post/python/advanced_topics/</guid>
      <description>Python进阶主题 高级数据结构 defaultdict 含默认值的字典 1 2 3 4 5 from collections import defaultdict dd = defaultdict(list) print(dd.get(&amp;#39;foo&amp;#39;)) # None print(dd[&amp;#39;foo]) # [] Counter 统计一个iterable数据结构中元素出现的次数。 1 2</description>
    </item>
    
    <item>
      <title></title>
      <link>http://0.0.0.0:1313/post/python/base_ds/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://0.0.0.0:1313/post/python/base_ds/</guid>
      <description>基础数据结构 数值 python共有4种数字类型int、long、float、complex。 quatize方法将数字舍入为固定指定。 1 2 3 from decimal</description>
    </item>
    
    <item>
      <title></title>
      <link>http://0.0.0.0:1313/post/python/closure/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://0.0.0.0:1313/post/python/closure/</guid>
      <description>闭包及装饰器 概念 闭包是一种函数，它会保留定义函数时存在的自由变量的绑定，这样调用函数时，虽然定义作用域不可用了，但是的仍能使用那些绑定。闭包</description>
    </item>
    
    <item>
      <title></title>
      <link>http://0.0.0.0:1313/post/python/context/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://0.0.0.0:1313/post/python/context/</guid>
      <description>上下文管理器 自动异常处理，with的奥秘 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 import contextlib class MyOpen(object): def __init__(self, file_name): self.file_name = file_name def __enter__(self): print(&amp;#39;==enter&amp;#39;) return open(self.file_name) def __exit__(self, exc_type, exc_val, exc_tb): print(&amp;#39;==exit&amp;#39;) @contextlib.contextmanager def my_open(file_name): print(&amp;#39;==enter&amp;#39;) file = open(file_name)</description>
    </item>
    
    <item>
      <title></title>
      <link>http://0.0.0.0:1313/post/python/exceptions/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://0.0.0.0:1313/post/python/exceptions/</guid>
      <description>异常 用法 有finally语句存在时，抛出的异常会被忽略： 1 2 3 4 5 6 7 8 9 10 11 def calc(division): try: return 1/division except ZeroDivisionError: raise ValueError(&amp;#34;Invalid.&amp;#34;) finally: return 0 print(calc(0)) # 0 捕获多个异常时使用元组： 1 2 3 4</description>
    </item>
    
    <item>
      <title></title>
      <link>http://0.0.0.0:1313/post/python/function/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://0.0.0.0:1313/post/python/function/</guid>
      <description>函数 参数 数组作为默认参数时，初始化时会默认生成一个数组： 1 2 3 4 5 6 7 8 9 10 11 class Foo(object): def do(self, param=[]): param.sort() param.append(&amp;#39;End&amp;#39;) return param print(Foo().do()) # [&amp;#39;End&amp;#39;] print(Foo().do()) # [&amp;#39;End&amp;#39;, &amp;#39;End&amp;#39;] print(Foo().do(param=[&amp;#34;foo&amp;#34;, &amp;#34;bar&amp;#34;])) # [&amp;#39;bar&amp;#39;, &amp;#39;foo&amp;#39;, &amp;#39;End&amp;#39;] print(Foo().do()) # [&amp;#39;End&amp;#39;, &amp;#39;End&amp;#39;, &amp;#39;End&amp;#39;] 参数传递</description>
    </item>
    
    <item>
      <title></title>
      <link>http://0.0.0.0:1313/post/python/interview/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://0.0.0.0:1313/post/python/interview/</guid>
      <description>我的Python面试纲要 语法篇 是否知道pep8规范，列举至少五条 装饰起及其使用场景 深拷贝/浅拷贝 字符串编码 生成器/yield 上文管理器/wi</description>
    </item>
    
    <item>
      <title></title>
      <link>http://0.0.0.0:1313/post/python/io/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://0.0.0.0:1313/post/python/io/</guid>
      <description>IO 文件 文件打开方式列表： 代码 方式 r 只读 r+ 读写 a 附加写 a+ 附加读写 w 新建只写 w+ 新建读写 rb 二进制读</description>
    </item>
    
    <item>
      <title></title>
      <link>http://0.0.0.0:1313/post/python/iter/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://0.0.0.0:1313/post/python/iter/</guid>
      <description>迭代器 迭代器可通过next函数获取下一个值： 1 2 3 4 5 6 7 &amp;gt;&amp;gt;&amp;gt; iter &amp;lt;built-in function iter&amp;gt; &amp;gt;&amp;gt;&amp;gt; i = iter(&amp;#39;abc&amp;#39;) &amp;gt;&amp;gt;&amp;gt; type(i) &amp;lt;class &amp;#39;str_iterator&amp;#39;&amp;gt; &amp;gt;&amp;gt;&amp;gt; next(i) &amp;#39;a&amp;#39; 自定义迭代器 自定义迭代器时__iter_函数返回自</description>
    </item>
    
    <item>
      <title></title>
      <link>http://0.0.0.0:1313/post/python/logging/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://0.0.0.0:1313/post/python/logging/</guid>
      <description>日志 logging 默认将WARNNING级别以上打印到std.out： 1 2 3 4 5 6 &amp;gt;&amp;gt;&amp;gt; logging.info(&amp;#39;info&amp;#39;) &amp;gt;&amp;gt;&amp;gt; logging.warning(&amp;#39;warn&amp;#39;) WARNING:root:warn &amp;gt;&amp;gt;&amp;gt; logging.warning(&amp;#39;error&amp;#39;) WARNING:root:error &amp;gt;&amp;gt;&amp;gt; 日志格式</description>
    </item>
    
    <item>
      <title></title>
      <link>http://0.0.0.0:1313/post/python/oo/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://0.0.0.0:1313/post/python/oo/</guid>
      <description>面向对象 拷贝 基本类型的拷贝均是深拷贝。 浅拷贝会构造一个新的复合对象，然后将原对象中找到的引用插入其中。 深拷贝会构造一个新的复合对象，然后递归</description>
    </item>
    
    <item>
      <title></title>
      <link>http://0.0.0.0:1313/post/python/perf_analyze/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://0.0.0.0:1313/post/python/perf_analyze/</guid>
      <description>Python性能分析 性能分析的关键是根据系统运行时间统计找出性能瓶颈。Python自带的CProfile运行一段代码可生成该代码的运行时间统</description>
    </item>
    
    <item>
      <title></title>
      <link>http://0.0.0.0:1313/post/python/regex/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://0.0.0.0:1313/post/python/regex/</guid>
      <description>正则表达式 正则表达式一般默认是贪婪的，但是Python好像并不是如此： 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 import re ret = re.match(r&amp;#39;(.*)-(.*)-(.*)&amp;#39;, &amp;#39;abc-de-fg&amp;#39;) print(ret) # &amp;lt;re.Match object; span=(0, 9), match=&amp;#39;abc-de-fg&amp;#39;&amp;gt; g0 = ret.group print(g0) # &amp;lt;built-in method</description>
    </item>
    
    <item>
      <title></title>
      <link>http://0.0.0.0:1313/post/python/str/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://0.0.0.0:1313/post/python/str/</guid>
      <description>字符串 概念 unicode是字符集，utf-8/gbk的编码规则 python2中str存储字节码(bytes) unicode使用编码转换成st</description>
    </item>
    
    <item>
      <title></title>
      <link>http://0.0.0.0:1313/post/thought/anti-interview/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://0.0.0.0:1313/post/thought/anti-interview/</guid>
      <description>记一次惨淡的蚂蚁金服面试经历 不知不觉在华为已经工作5年多了，这5年多来成长了许多，也得到了许多。尤其是近两年担任华为云备份服务TL(Tech</description>
    </item>
    
    <item>
      <title></title>
      <link>http://0.0.0.0:1313/post/thought/dilemma/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://0.0.0.0:1313/post/thought/dilemma/</guid>
      <description>中国的困境 困境 经济不景气，产业升级，辛苦，环境差，言论管制严。劳动力成本高。 经济 政治 限制言论自由，腐败严重 2020.01.17 故宫闭馆期间露小宝（何长工孙女）</description>
    </item>
    
    <item>
      <title></title>
      <link>http://0.0.0.0:1313/post/thought/interview-qa/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://0.0.0.0:1313/post/thought/interview-qa/</guid>
      <description>面试题目 自我介绍 本科毕业后一直在华为工作，有5年灾备服务开发经验。 为什么想离职 离职想法是多方面的，最主要原因是家在南边。 职业规划 写代码是兴趣</description>
    </item>
    
    <item>
      <title></title>
      <link>http://0.0.0.0:1313/post/thought/stock/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://0.0.0.0:1313/post/thought/stock/</guid>
      <description>股票 理论 十大准则 股市不是赌博，也绝不能当成赌博，否则只能等待被收割。 炒股无疑需要技术，懂得再多道理的经济学家不一定能炒好股票。 中国股市主要看</description>
    </item>
    
    <item>
      <title>Python单元测试方法</title>
      <link>http://0.0.0.0:1313/post/python/ut/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://0.0.0.0:1313/post/python/ut/</guid>
      <description>LLT原则 用例一定要用场景和预期 所谓场景，就是用例一定要有目的，比如检查调用cinder网络异常怎么处理，创建快照失败怎么处理。 1 2 3 4 5 6</description>
    </item>
    
    <item>
      <title>代码隔离技术</title>
      <link>http://0.0.0.0:1313/post/python/code-isolation/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://0.0.0.0:1313/post/python/code-isolation/</guid>
      <description>代码隔离技术 目录隔离 目录隔离方法的适用场景必须满足三个条件： 线上线下代码完全不一样。 所隔离的代码没有依赖。 可通过打包过程隔离。 这种方法一般适</description>
    </item>
    
    <item>
      <title>关于技术团队运作流程的思考</title>
      <link>http://0.0.0.0:1313/post/cbs/team-thought/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://0.0.0.0:1313/post/cbs/team-thought/</guid>
      <description>需求沟通 **参与人：**PLM、SE、SA **来源：**任务令、IaaS指派、一线PMS录入 **形式：**RAT **输出：**需要明确客户业</description>
    </item>
    
    <item>
      <title>备份服务团队开发规范</title>
      <link>http://0.0.0.0:1313/post/cbs/coding-rule/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://0.0.0.0:1313/post/cbs/coding-rule/</guid>
      <description>需求管理 所有需要均通过Vision管理，开发、测试人员只认vision上分解的任务，不接受任何黑活。 开源管理 所有对Karbor源码修改须使用</description>
    </item>
    
    <item>
      <title>常用数据库命令</title>
      <link>http://0.0.0.0:1313/post/database/database-operation/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://0.0.0.0:1313/post/database/database-operation/</guid>
      <description>数据库指南 常用命令 查询用户：\du 创建用户：CREATE USER karbor_a WITH CREATEDB PASSWORD &amp;quot;passowrd&amp;quot;; 解锁用户：alter user xxx login; 修改表用户：alter table xxx owner to xxx; 根据查询结果更</description>
    </item>
    
    <item>
      <title>开发环境搭建</title>
      <link>http://0.0.0.0:1313/post/python/dev-env/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://0.0.0.0:1313/post/python/dev-env/</guid>
      <description>开发环境搭建 python环境设置 安装pip，具体方式google 安装VCForPython27，用于编译c语言 由于网络原因无法从外网pip源</description>
    </item>
    
    <item>
      <title>数据库锁</title>
      <link>http://0.0.0.0:1313/post/python/database-lock/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://0.0.0.0:1313/post/python/database-lock/</guid>
      <description>场景：并发更新 Karbor原生代码更新Plan的Resource是先把Plan的所有Resource置为deleted，然后再创建新的创建接</description>
    </item>
    
    <item>
      <title>正则表达式</title>
      <link>http://0.0.0.0:1313/post/linux/regex/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://0.0.0.0:1313/post/linux/regex/</guid>
      <description>基本用法 基本用法可以自行google。 零宽断言 零宽断言简而言之就是限制待匹配规则的前后必须是什么或者必须不是什么，可以简单概括如下： 规则 表达</description>
    </item>
    
  </channel>
</rss>